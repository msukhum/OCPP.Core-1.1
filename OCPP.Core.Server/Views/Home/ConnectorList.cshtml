
@using OCPP.Core.Database
@model ConnectorStatusViewModel

@{ ViewData["Title"] = "Management"; }

<style>
    .card-body {
        padding: 0.75rem;
    }

    .successTextColor {
        color: seagreen;
    }

    .errorTextColor {
        color: orangered;
    }

    .font-weight-bold {
        color: #5c6268 !important;
    }

    .shadow-lg {
        box-shadow: 0 0.5rem 1rem rgba(0,0,0,.175) !important;
    }

    .btn-font-weight-bold {
        font-weight: 700 !important;
    }

    .disabled {
        color: #b8babd !important;
    }

    .row {
        justify-content: center;
    }
</style>
<div class="row">
    <div class="col-lg-12">
        <div class="page-title-box">
            <div class="row align-items-center">
                <div class="col-md-10">
                    <h4 class="page-title mb-0">Connectors</h4>
                </div>
            </div>
        </div>
    </div>
</div> <!-- end row -->
<div class="row align-items-center">
    <div class="col-md-10 card border-1 shadow-none rounded">
        <div class="card-body">
            <div class="row align-items-center"  style="justify-content: flex-start;">
                <div class="col-md-12 card border-1 shadow-none rounded table-responsive">
                    @if (Model != null)
                    {
                <table id="dtChargeTags" class="table table-striped table-bordered table-sm table-hover mb-0" cellspacing="0" width="100%">
                    <thead>
                        <tr>
                            <th class="th-sm">Charge point</th>
                            <th class="th-sm">Connector</th>
                            <th class="th-sm">Name</th>
                            <th class="th-sm">Last status</th>
                            <th class="th-sm">Status timestamp</th>
                            <th class="th-sm">Last meter value</th>
                            <th class="th-sm">Meter timestamp</th>
                            <th class="th-sm">Transactions</th>
                            <th class="th-sm">Reservations</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.ConnectorStatuses != null)
                        {
                            foreach (ConnectorStatus cs in Model.ConnectorStatuses)
                            {
                <tr onclick="window.location='@Url.Action("Connector", Constants.HomeController, new { id = cs.ChargePointId, connectorId = cs.ConnectorId.ToString() })';">
                    <td>@cs.ChargePointId</td>
                    <td>@cs.ConnectorId</td>
                    <td>@cs.ConnectorName</td>
                    <td>@((!string.IsNullOrEmpty(cs.LastStatus)) ? cs.LastStatus : "-")</td>
                    <td>@((cs.LastStatusTime.HasValue) ? string.Format("{0:G}", cs.LastStatusTime.Value) : "-")</td>
                    <td>@((cs.LastMeter.HasValue) ? string.Format("{0:0.0##}", cs.LastMeter.Value) : "-" )</td>
                    <td>@((cs.LastMeterTime.HasValue) ? string.Format("{0:G}", cs.LastMeterTime.Value): "-")</td>
                    <td class="text-center"><a href="~/Home/Transactions/@Uri.EscapeDataString(cs.ChargePointId)/@cs.ConnectorId" class="text-decoration-none btn btn-primary">View</a></td>
                    <td class="text-center"><a href="~/Home/Reservations/@Uri.EscapeDataString(cs.ChargePointId)/@cs.ConnectorId" class="text-decoration-none btn btn-primary">View</a></td>
                </tr>
}
        }
                    </tbody>
                </table>}
                </div>
            </div>
        </div>
    </div>
</div>


